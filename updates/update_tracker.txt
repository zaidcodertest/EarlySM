Early SM: !FINISHED! First version. comes with random commands. Mostly calculators.

Early SM 1: !FINISHED! Added a manual page feature. Basically, if you put a "?" before a command like this: "?help", it will pull up information on the "help" command. It is pretty much like the "man" command in UNIX.

Early SM 2: !FINISHED! Added a function type command that looks like a function in programming. Hoping that this introduces a new styling for commands on a command line that makes it more flexible.
To be more specific: I wanted to make a command that changes the color of the terminal, being "layout(background color,text color)" as the command. Command name: layout()

Early SM 3: !FINISHED! Added some logic gate / bitwise operating commands to calculate logic through the program. Them being AND, and NAND.
Also updated some of the help pages for the calculator commands to make it more understandable. Didn't know how to implement the remaining XAND OR NOR NAND XOR I said I would. Command names: CALC_AND, CALC_NAND

Early SM 4: !FINISHED! Added another function type command called output(). It is supposed to help output information. Command name: output()

Early SM 5: !FINISHED! Added a program that creates a table for you. Command name: create_table

Early SM 6: !FINISHED! Added more to the hardware command. Added information on the local computer name, and added information on random access memory (RAM). Command name: hardware

Early SM 7: !FINISHED! Added a C++ programming tutorial guide. On top of that we added the manual as it says in the OS "Please check your manual for usage"
from the manual folder. The manual was added digitaly to EarlySM. Also a small change was made to output(time). Command names: C++_GUIDE, manual

Early SM 8: !FINISHED! Added more to the C++ programming tutorial. On top of that there is a number conversion program that converts between units.
Also fixed the hardware command from some error. Command name: unit_convert

Early SM 9: !FINISHED! Created an OS usage guide that works a bit like the C++ guide. Failure for std::getline to work properly, which means create_file stays the same.
Also added output(dir_info) which will say the directory you are in and its contents. Command name: OS_GUIDE

Early SM 10: !FINISHED! This time around I'm planning on creating a "building generator" game where you can specify how wide and tall you want your building to be.
By pure coincidence, I found out how to get create_file some what working by throwing std::cin in a while loop and continiously appending to another variable.
Because of this I'll remove create_file from the plans folder as it looks like I got it behaving normal. Command name: create_a_building

Early SM 11: !FINISHED! Added a RGB tool to deal wih RGB. It is basically supposed to see how your color combos would look like. Command name: test_RGB

Early SM 12: !FINISHED! Added some sort of temporary clipboard where you could temporarily store text that you can look back into. You can store, remove, and print text from the clipboard.
Command names: clear_clipboard, input_clipboard, output_clipboard

Early SM 13: !FINISHED! Added a bar graph maker. Command name: bar_graph_maker

Early SM 14: !FINISHED! Added a command to read files, which would cancel the other idea to output how long you have been using the program. Command name: read_file

Early SM 15: !FINISHED! Added a list of computer parts and peripherals as a reference for people who deal with hardware. Command name: list_of_electronic_parts

Early SM 16: !FINISHED! Added a sample weather app. Command name: weather

Early SM 17: !FINISHED! Added an alternative to the table creator program that does the same job, but works differently.
This may change the idea of the word generator but hopefully we'd find a way to come back to that. Command name: alt_create_table

Early SM 18: !FINISHED! Added a number list organizer using the sort function. Type in numbers and it will repeat organized. Command name: organize_numbers

Early SM 19: !FINISHED! Added a computer information table that lists information about the user from a prompt which you are supposed to input the information you want in,
than you can always print out the information from the command line when you are done. Command names: input_computer_info, output_computer_info

Early SM 20: !FINISHED! Added a programming manual, with an update for the output(time) command being that it had a problem with AM timing and failing to properly initialize during that time.
Command name: about_programming_updated

Early SM 21: !NOT FINISHED! Wanting to add a feature that checks the version.
